SELECT_CUSTOMERS_DTO_FIRST_PART = WITH summed_orders AS ( \
    WITH bottles15 AS (SELECT order_id, quantity FROM order_item WHERE article_name = 'Voda 15L'), \
         bottles19 AS (SELECT order_id, quantity FROM order_item WHERE article_name = 'Voda 19L') \
    SELECT customer_id, \
        SUM(COALESCE(bottles15.quantity, 0)) AS water_small, \
        SUM(COALESCE(bottles19.quantity, 0)) AS water_large, \
        SUM(COALESCE(bottles15.quantity, 0)) + SUM(COALESCE(bottles19.quantity, 0)) > 2 AS obligation_fulfilled, \
        DATE_TRUNC('month', "order".date) AS date \
    FROM "order" \
        LEFT JOIN bottles15 ON bottles15.order_id = "order".id \
        LEFT JOIN bottles19 ON bottles19.order_id = "order".id
SELECT_CUSTOMERS_DTO_SECOND_PART = ${SELECT_CUSTOMERS_DTO_FIRST_PART} \
    WHERE DATE_TRUNC('month', "order".date) \
        BETWEEN DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '6 months' \
        AND DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 months' \
    GROUP BY DATE_TRUNC('month', "order".date), customer_id \
) \
SELECT customer.*, COALESCE(s.date, customer.date) sanitize_date, customer.sanitise_period - 1 - extract(month from age(current_timestamp, ((COALESCE(s.date, customer.date)) + INTERVAL '1 day'))) as month_until_sanitize,  GREATEST(0, LEAST(6, GREATEST(0, EXTRACT(year from AGE(DATE_TRUNC('month',CURRENT_DATE), DATE_TRUNC('month',customer.date))) * 12 + \
EXTRACT(MONTH FROM AGE(DATE_TRUNC('month',CURRENT_DATE), DATE_TRUNC('month',customer.date)))-1)) - SUM(CASE WHEN summed_orders.obligation_fulfilled = true then 1 else 0 end)) AS months_without_fulfilled_monthly_obligation \
FROM summed_orders \
    FULL OUTER JOIN customer on customer_id = customer.id \
    LEFT JOIN (SELECT customer_id, MAX(date) date from sanitize group by customer_id) s on customer.id = s.customer_id

SELECT_ALL_DTO_CUSTOMERS = ${SELECT_CUSTOMERS_DTO_SECOND_PART} \
GROUP BY customer.id, customer.name, customer.date, s.date \
ORDER BY customer.name
SELECT_ALL_CUSTOMERS = SELECT * FROM customer ORDER BY name
SELECT_CUSTOMER_BY_ID = SELECT customer.*, null sanitize_date FROM customer WHERE id = ?
INSERT_CUSTOMER = INSERT into customer (name, city, address, phone, sanitise_period, date, legal_form) VALUES (?,?,?,?,?,?,?)
UPDATE_CUSTOMER_BY_ID = UPDATE customer SET name=?, address=?, city=?, phone=?, sanitise_period=?, date=?, legal_form =?, debt=?, packaging_small=?, packaging_large=?, modified_on=current_timestamp WHERE id=? and modified_on=?
DELETE_CUSTOMER_BY_ID = DELETE FROM customer WHERE id=?
SELECT_CUSTOMERS_DTO_BY_TEXT_FIELDS = ${SELECT_CUSTOMERS_DTO_SECOND_PART} \
WHERE id::varchar(255) like ? or lower(name) like ? or lower(address) like ? or lower(phone) like ? or lower(city) like ? \
GROUP BY customer.id, customer.name, customer.date, s.date \
ORDER BY customer.name
SELECT_CUSTOMERS_DTO_WITH_UNFULFILLED_OBLIGATION = ${SELECT_CUSTOMERS_DTO_SECOND_PART} \
GROUP BY customer.id, customer.name, customer.date, s.date \
HAVING GREATEST(0, LEAST(6, GREATEST(0, EXTRACT(year from AGE(DATE_TRUNC('month',CURRENT_DATE), DATE_TRUNC('month',customer.date))) * 12 + \
       EXTRACT(MONTH FROM AGE(DATE_TRUNC('month',CURRENT_DATE), DATE_TRUNC('month',customer.date)))-1)) - SUM(CASE WHEN summed_orders.obligation_fulfilled = true then 1 else 0 end)) > 0 \
ORDER BY customer.name
COUNT_CUSTOMERS_DTO_WITH_UNFULFILLED_OBLIGATION = select count (months_without_fulfilled_monthly_obligation.id) \
from (${SELECT_CUSTOMERS_DTO_WITH_UNFULFILLED_OBLIGATION}) as months_without_fulfilled_monthly_obligation
SELECT_CUSTOMERS_DTO_WITH_SANITIZE_NEEDED = ${SELECT_CUSTOMERS_DTO_SECOND_PART} \
WHERE (customer.sanitise_period - 1 - extract(month from age(current_timestamp, ((COALESCE(s.date, customer.date)) + INTERVAL '1 day')))) = 0 \
GROUP BY customer.id, customer.name, customer.date, s.date \
ORDER BY customer.name
COUNT_DATES_WITH_UNFULFILLED_OBLIGATION_WITH_BY_CUSTOMER_ID = WITH summed_orders as ( \
WITH bottles15 AS (SELECT order_id, quantity FROM order_item WHERE article_name = 'Voda 15L'), \
bottles19 AS (SELECT order_id, quantity FROM order_item WHERE article_name = 'Voda 19L') \
SELECT SUM(COALESCE(bottles15.quantity, 0))                                               water_small, \
SUM(COALESCE(bottles19.quantity, 0))                                               water_large, \
SUM(COALESCE(bottles15.quantity, 0)) + SUM(COALESCE(bottles19.quantity, 0)) > 2 as obligation_fulfilled, \
DATE_TRUNC('month', "order".date) as date \
FROM "order" \
LEFT JOIN bottles15 on bottles15.order_id = "order".id \
LEFT JOIN bottles19 on bottles19.order_id = "order".id \
WHERE customer_id = ? \
AND DATE_TRUNC('month', "order".date) BETWEEN DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '6 months' \
AND DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 months' \
GROUP BY DATE_TRUNC('month', "order".date) \
), \
last_six_months AS (select DATE_TRUNC('month',CURRENT_DATE) - INTERVAL '6 months' + (interval '1' month * generate_series(0,5)) AS month) \
\
select DATE(month) \
from summed_orders \
FULL OUTER JOIN last_six_months on last_six_months.month = summed_orders."date" \
where month > DATE_TRUNC('month',(select "date" from customer where id = ?)) and COALESCE(obligation_fulfilled, false) = false
COUNT_CUSTOMERS_DTO_WITH_SANITIZE_NEEDED = select count (customers_sanitization_needed.id) \
from (${SELECT_CUSTOMERS_DTO_WITH_SANITIZE_NEEDED}) as customers_sanitization_needed
SELECT_CUSTOMERS_DTO_WITH_SANITIZE_LATE = ${SELECT_CUSTOMERS_DTO_SECOND_PART} \
WHERE customer.sanitise_period - 1 - extract(month from age(current_timestamp, ((COALESCE(s.date, customer.date)) + INTERVAL '1 day'))) < 0 \
GROUP BY customer.id, customer.name, customer.date, s.date \
ORDER BY customer.name
COUNT_CUSTOMERS_DTO_WITH_SANITIZE_LATE = select count (customers_sanitization_late.id) \
from (${SELECT_CUSTOMERS_DTO_WITH_SANITIZE_LATE}) as customers_sanitization_late
SELECT_CUSTOMERS_DTO_WITH_PACKAGING_DEBT = ${SELECT_CUSTOMERS_DTO_SECOND_PART} \
WHERE customer.packaging_large > 0 OR customer.packaging_small > 0 \
GROUP BY customer.id, customer.name, customer.date, s.date \
ORDER BY customer.name
COUNT_CUSTOMERS_DTO_WITH_PACKAGING_DEBT = select count (customers_packaging_debt.id) \
from (${SELECT_CUSTOMERS_DTO_WITH_PACKAGING_DEBT}) as customers_packaging_debt
SELECT_CUSTOMERS_DTO_WITH_DEBT = ${SELECT_CUSTOMERS_DTO_SECOND_PART} \
WHERE customer.debt > 0 \
GROUP BY customer.id, customer.name, customer.date, s.date \
ORDER BY customer.name
COUNT_CUSTOMERS_DTO_WITH_DEBT = select count (customers_debt.id) \
from (${SELECT_CUSTOMERS_DTO_WITH_DEBT}) as customers_debt
SELECT_CUSTOMERS_BY_TEXT_FIELDS = SELECT * FROM customer WHERE id::varchar(255) like ? or lower(name) like ? or lower(address) like ? or lower(phone) like ? or lower(city) like ? ORDER BY customer.name
SELECT_DISTINCT_CITIES_BY_NAME = select distinct city from customer where lower(city) like ? order by city
SELECT_ALL_DISTINCT_CITIES_BY_NAME = select distinct city from customer order by city